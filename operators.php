<?php

/*var_dump(5/2); //var_dump - функция,которая выводит тип значения чего-либо
$result = 2 < 4;
var_dump($result);
$resultOne = 2 + 2 * 2;//так же есть приоритет операторов(как в математике)
$resultOne = (2 + 2) * 2;//с помощью скобок можно управлять приоритетом операторов
var_dump($resultOne);*/

/*$a = 6;
$b = 4;
var_dump($a + $b);
var_dump($a - $b);
var_dump($a * $b);
var_dump($a / $b);
var_dump($a % 4);//остаток от деления
var_dump($a ** 2);//возведение в степенть
var_dump(5 % 2);
var_dump(17 % 12);
var_dump(8 % 4);*/

/*$result = ($x = 5) * 2; так делать можно,но не приветствуется
var_dump($result);*/

/*$x = 5;
$y = 7;
$y += $x;             так можно и нужно сокращать
var_dump($y);

$a = 6;
$b = 3;
$a /= $b;             так можно и нужно сокращать
var_dump($a);

$hello = 'Hello ';
$hello .= 'world!';     со строками так работает,не понял как,но вот так
var_dump($hello);*/

/*$x = 2;
$y = '2';
var_dump($x == $y);//проверка на равенство(приводит операторы к одному типу и сравнивает)
var_dump($x === $y);//проверка на тожденственное равенство(не приводит к одному типу и тупо сравнивают)
var_dump($x != $y);//если не равны,то ошибка(приводит операторы к одному типу и сравнивает)
var_dump($x !== $y);//сравнивает типы,если совпали то false,если нет,то true(не приводит к одному типу и тупо сравнивают)*/

/*$x = 2;
$y = 4;

var_dump($x > $y);//больше
var_dump($x < $y);//меньше
var_dump($x >= $y);//больше или равно
var_dump($x <= $y);//меньше или равно*/

/*  Spaceship <=>(рил корабль штурмовика) этот оператор нужен для использования в функциях сортировки
var_dump(2 <=> 4);//Если $a < $b, вернёт -1
var_dump(2 <=> 2);//Если $a == $b, вернёт 0
var_dump(5 <=> 3);//Если $a > $b, вернёт 1*/

/*$i = 5;
//$i++ постфиксный инкремент, возвращает текущее значение $i, а затем увеличивает значение на единицу
//$x = $i++;$x = $i++; в таком виде будет увеличивать число,если это надо(прибавляет только в след.инкременте)
//++$i префиксный инкремент, сначала увеличивает значение переменной $i на единицу, а затем возвращает результат
//$x = ++$i; в таков виде сразу прибавляет число
//$i--постфиксный декремент, возвращает текущее значение $i, а затем уменьшает значение на единицу
//--$i префиксный декремент, сначала уменьшает значение переменной $i на единицу, а затем возвращает результат
$x = $i++;
$y = ++$i;
$z = --$i;
var_dump($x);
var_dump($y);
var_dump($z);
var_dump($i);*/

/*// && - оператор И (два верны,то true,если нет,то false)
// || - оператор ИЛИ (если хоть один верен,то true,иначе false)
// ! - оператор отрицания (если ответ правильный,то false,если не правильный,то true)
// xor - исключающее ИЛИ (вернет true,если один из операторов верен,а друг не верен)
var_dump(true && true);
var_dump(true && false);
var_dump(true || true);
var_dump(true || false);
var_dump(!true);
var_dump(!false);
var_dump(true xor true);
var_dump(true xor false);
var_dump(false xor true);
var_dump(false xor false);*/

/*
//БЛЯДСКАЯ ПРОВЕРКА НА ЧЕТНОСТЬ
// определим, является ли число чётным и при этом оно больше 10. Для того, чтобы проверить на чётность – достаточно
// взять остаток от деления на 2 и сравнить с нулём. Если будет 0, то число чётное.
$x = 14;
$isEven = $x % 2 == 0;//тут проверяем,четное ли число
var_dump($isEven);
$isMoreThan10 = $x > 10;//тут проверяем,больше ли оно 10
var_dump($isMoreThan10);
$isMoreThan10 = $isEven && $isMoreThan10;//тут уже сравниваем,чтобы оно было четным и больше 10
var_dump($isMoreThan10);
$isMoreThan10 = $x % 2 == 0 && $x > 10;//так можно сократить всю писанину,что была выше
var_dump($isMoreThan10);*/

/*$string1 = 'Hello';
$string2 = 'World';
echo $string1. ',' . $string2; так вот можно объединять строки
*/

//ДЗ
$a = !1;
var_dump($a);
$b = !0;
var_dump($b);
$c = !true;
var_dump($c);
$d = 2 && 4;
var_dump($d);
$e = 5 && 0;
var_dump($e);
$f = 3 || 0;
var_dump($f);
$g = 5 / 1;
var_dump($g);
$h = 1 / 5;
var_dump($h);
$i = 5 + '5string';
var_dump($i);
$k = '5' == 5;
var_dump($k);
$l = '05' == 5;
var_dump($l);
$m = '05' == '5';
var_dump($m);











